//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace Ork.Framework.PositionDataProvider {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FullyQualifiedCarData", Namespace="http://schemas.datacontract.org/2004/07/OpenResKit.CarbonFootprint.Positions")]
    public partial class FullyQualifiedCarData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int CO2Field;
        
        private string DateOfChangeField;
        
        private string DescriptionField;
        
        private double EmissionsCOField;
        
        private System.Nullable<double> EmissionsHCField;
        
        private System.Nullable<double> EmissionsHCNOxField;
        
        private System.Nullable<double> EmissionsNOxField;
        
        private System.Nullable<double> EmissionsParticulatesField;
        
        private int EngineCapacityField;
        
        private int EuroStandardField;
        
        private int FuelCostField;
        
        private string FuelTypeField;
        
        private int IdField;
        
        private double ImperialCombinedField;
        
        private double ImperialExtraUrbanField;
        
        private double ImperialUrbanColdField;
        
        private string ManufacturerField;
        
        private double MetricCombinedField;
        
        private double MetricExtraUrbanField;
        
        private double MetricUrbanColdField;
        
        private string ModelField;
        
        private double NoiseLevelField;
        
        private string TransmissionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CO2 {
            get {
                return this.CO2Field;
            }
            set {
                if ((this.CO2Field.Equals(value) != true)) {
                    this.CO2Field = value;
                    this.RaisePropertyChanged("CO2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateOfChange {
            get {
                return this.DateOfChangeField;
            }
            set {
                if ((object.ReferenceEquals(this.DateOfChangeField, value) != true)) {
                    this.DateOfChangeField = value;
                    this.RaisePropertyChanged("DateOfChange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double EmissionsCO {
            get {
                return this.EmissionsCOField;
            }
            set {
                if ((this.EmissionsCOField.Equals(value) != true)) {
                    this.EmissionsCOField = value;
                    this.RaisePropertyChanged("EmissionsCO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> EmissionsHC {
            get {
                return this.EmissionsHCField;
            }
            set {
                if ((this.EmissionsHCField.Equals(value) != true)) {
                    this.EmissionsHCField = value;
                    this.RaisePropertyChanged("EmissionsHC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> EmissionsHCNOx {
            get {
                return this.EmissionsHCNOxField;
            }
            set {
                if ((this.EmissionsHCNOxField.Equals(value) != true)) {
                    this.EmissionsHCNOxField = value;
                    this.RaisePropertyChanged("EmissionsHCNOx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> EmissionsNOx {
            get {
                return this.EmissionsNOxField;
            }
            set {
                if ((this.EmissionsNOxField.Equals(value) != true)) {
                    this.EmissionsNOxField = value;
                    this.RaisePropertyChanged("EmissionsNOx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> EmissionsParticulates {
            get {
                return this.EmissionsParticulatesField;
            }
            set {
                if ((this.EmissionsParticulatesField.Equals(value) != true)) {
                    this.EmissionsParticulatesField = value;
                    this.RaisePropertyChanged("EmissionsParticulates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EngineCapacity {
            get {
                return this.EngineCapacityField;
            }
            set {
                if ((this.EngineCapacityField.Equals(value) != true)) {
                    this.EngineCapacityField = value;
                    this.RaisePropertyChanged("EngineCapacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EuroStandard {
            get {
                return this.EuroStandardField;
            }
            set {
                if ((this.EuroStandardField.Equals(value) != true)) {
                    this.EuroStandardField = value;
                    this.RaisePropertyChanged("EuroStandard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FuelCost {
            get {
                return this.FuelCostField;
            }
            set {
                if ((this.FuelCostField.Equals(value) != true)) {
                    this.FuelCostField = value;
                    this.RaisePropertyChanged("FuelCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FuelType {
            get {
                return this.FuelTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FuelTypeField, value) != true)) {
                    this.FuelTypeField = value;
                    this.RaisePropertyChanged("FuelType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ImperialCombined {
            get {
                return this.ImperialCombinedField;
            }
            set {
                if ((this.ImperialCombinedField.Equals(value) != true)) {
                    this.ImperialCombinedField = value;
                    this.RaisePropertyChanged("ImperialCombined");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ImperialExtraUrban {
            get {
                return this.ImperialExtraUrbanField;
            }
            set {
                if ((this.ImperialExtraUrbanField.Equals(value) != true)) {
                    this.ImperialExtraUrbanField = value;
                    this.RaisePropertyChanged("ImperialExtraUrban");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ImperialUrbanCold {
            get {
                return this.ImperialUrbanColdField;
            }
            set {
                if ((this.ImperialUrbanColdField.Equals(value) != true)) {
                    this.ImperialUrbanColdField = value;
                    this.RaisePropertyChanged("ImperialUrbanCold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerField, value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MetricCombined {
            get {
                return this.MetricCombinedField;
            }
            set {
                if ((this.MetricCombinedField.Equals(value) != true)) {
                    this.MetricCombinedField = value;
                    this.RaisePropertyChanged("MetricCombined");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MetricExtraUrban {
            get {
                return this.MetricExtraUrbanField;
            }
            set {
                if ((this.MetricExtraUrbanField.Equals(value) != true)) {
                    this.MetricExtraUrbanField = value;
                    this.RaisePropertyChanged("MetricExtraUrban");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MetricUrbanCold {
            get {
                return this.MetricUrbanColdField;
            }
            set {
                if ((this.MetricUrbanColdField.Equals(value) != true)) {
                    this.MetricUrbanColdField = value;
                    this.RaisePropertyChanged("MetricUrbanCold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double NoiseLevel {
            get {
                return this.NoiseLevelField;
            }
            set {
                if ((this.NoiseLevelField.Equals(value) != true)) {
                    this.NoiseLevelField = value;
                    this.RaisePropertyChanged("NoiseLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Transmission {
            get {
                return this.TransmissionField;
            }
            set {
                if ((object.ReferenceEquals(this.TransmissionField, value) != true)) {
                    this.TransmissionField = value;
                    this.RaisePropertyChanged("Transmission");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GlobalAirport", Namespace="http://schemas.datacontract.org/2004/07/OpenResKit.CarbonFootprint.Positions")]
    public partial class GlobalAirport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string continentField;
        
        private System.Nullable<double> elevation_ftField;
        
        private string gps_codeField;
        
        private string home_linkField;
        
        private string iata_codeField;
        
        private int idField;
        
        private string identField;
        
        private string iso_countryField;
        
        private string iso_regionField;
        
        private string keywordsField;
        
        private double latitude_degField;
        
        private string local_codeField;
        
        private double longitude_degField;
        
        private string municipalityField;
        
        private string nameField;
        
        private string scheduled_serviceField;
        
        private string typeField;
        
        private string wikipedia_linkField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string continent {
            get {
                return this.continentField;
            }
            set {
                if ((object.ReferenceEquals(this.continentField, value) != true)) {
                    this.continentField = value;
                    this.RaisePropertyChanged("continent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> elevation_ft {
            get {
                return this.elevation_ftField;
            }
            set {
                if ((this.elevation_ftField.Equals(value) != true)) {
                    this.elevation_ftField = value;
                    this.RaisePropertyChanged("elevation_ft");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string gps_code {
            get {
                return this.gps_codeField;
            }
            set {
                if ((object.ReferenceEquals(this.gps_codeField, value) != true)) {
                    this.gps_codeField = value;
                    this.RaisePropertyChanged("gps_code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string home_link {
            get {
                return this.home_linkField;
            }
            set {
                if ((object.ReferenceEquals(this.home_linkField, value) != true)) {
                    this.home_linkField = value;
                    this.RaisePropertyChanged("home_link");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string iata_code {
            get {
                return this.iata_codeField;
            }
            set {
                if ((object.ReferenceEquals(this.iata_codeField, value) != true)) {
                    this.iata_codeField = value;
                    this.RaisePropertyChanged("iata_code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ident {
            get {
                return this.identField;
            }
            set {
                if ((object.ReferenceEquals(this.identField, value) != true)) {
                    this.identField = value;
                    this.RaisePropertyChanged("ident");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string iso_country {
            get {
                return this.iso_countryField;
            }
            set {
                if ((object.ReferenceEquals(this.iso_countryField, value) != true)) {
                    this.iso_countryField = value;
                    this.RaisePropertyChanged("iso_country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string iso_region {
            get {
                return this.iso_regionField;
            }
            set {
                if ((object.ReferenceEquals(this.iso_regionField, value) != true)) {
                    this.iso_regionField = value;
                    this.RaisePropertyChanged("iso_region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string keywords {
            get {
                return this.keywordsField;
            }
            set {
                if ((object.ReferenceEquals(this.keywordsField, value) != true)) {
                    this.keywordsField = value;
                    this.RaisePropertyChanged("keywords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double latitude_deg {
            get {
                return this.latitude_degField;
            }
            set {
                if ((this.latitude_degField.Equals(value) != true)) {
                    this.latitude_degField = value;
                    this.RaisePropertyChanged("latitude_deg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string local_code {
            get {
                return this.local_codeField;
            }
            set {
                if ((object.ReferenceEquals(this.local_codeField, value) != true)) {
                    this.local_codeField = value;
                    this.RaisePropertyChanged("local_code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double longitude_deg {
            get {
                return this.longitude_degField;
            }
            set {
                if ((this.longitude_degField.Equals(value) != true)) {
                    this.longitude_degField = value;
                    this.RaisePropertyChanged("longitude_deg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string municipality {
            get {
                return this.municipalityField;
            }
            set {
                if ((object.ReferenceEquals(this.municipalityField, value) != true)) {
                    this.municipalityField = value;
                    this.RaisePropertyChanged("municipality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string scheduled_service {
            get {
                return this.scheduled_serviceField;
            }
            set {
                if ((object.ReferenceEquals(this.scheduled_serviceField, value) != true)) {
                    this.scheduled_serviceField = value;
                    this.RaisePropertyChanged("scheduled_service");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                if ((object.ReferenceEquals(this.typeField, value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string wikipedia_link {
            get {
                return this.wikipedia_linkField;
            }
            set {
                if ((object.ReferenceEquals(this.wikipedia_linkField, value) != true)) {
                    this.wikipedia_linkField = value;
                    this.RaisePropertyChanged("wikipedia_link");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PositionDataProvider.PositionDataContext")]
    public interface PositionDataContext {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PositionDataContext/GetFullyQualifiedCarData", ReplyAction="http://tempuri.org/PositionDataContext/GetFullyQualifiedCarDataResponse")]
        System.IAsyncResult BeginGetFullyQualifiedCarData(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Ork.Framework.PositionDataProvider.FullyQualifiedCarData> EndGetFullyQualifiedCarData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PositionDataContext/GetAirportData", ReplyAction="http://tempuri.org/PositionDataContext/GetAirportDataResponse")]
        System.IAsyncResult BeginGetAirportData(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Ork.Framework.PositionDataProvider.GlobalAirport> EndGetAirportData(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PositionDataContextChannel : Ork.Framework.PositionDataProvider.PositionDataContext, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFullyQualifiedCarDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFullyQualifiedCarDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Ork.Framework.PositionDataProvider.FullyQualifiedCarData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Ork.Framework.PositionDataProvider.FullyQualifiedCarData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAirportDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAirportDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Ork.Framework.PositionDataProvider.GlobalAirport> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Ork.Framework.PositionDataProvider.GlobalAirport>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PositionDataContextClient : System.ServiceModel.ClientBase<Ork.Framework.PositionDataProvider.PositionDataContext>, Ork.Framework.PositionDataProvider.PositionDataContext {
        
        private BeginOperationDelegate onBeginGetFullyQualifiedCarDataDelegate;
        
        private EndOperationDelegate onEndGetFullyQualifiedCarDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetFullyQualifiedCarDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAirportDataDelegate;
        
        private EndOperationDelegate onEndGetAirportDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetAirportDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public PositionDataContextClient() {
        }
        
        public PositionDataContextClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PositionDataContextClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PositionDataContextClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PositionDataContextClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetFullyQualifiedCarDataCompletedEventArgs> GetFullyQualifiedCarDataCompleted;
        
        public event System.EventHandler<GetAirportDataCompletedEventArgs> GetAirportDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Ork.Framework.PositionDataProvider.PositionDataContext.BeginGetFullyQualifiedCarData(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFullyQualifiedCarData(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Ork.Framework.PositionDataProvider.FullyQualifiedCarData> Ork.Framework.PositionDataProvider.PositionDataContext.EndGetFullyQualifiedCarData(System.IAsyncResult result) {
            return base.Channel.EndGetFullyQualifiedCarData(result);
        }
        
        private System.IAsyncResult OnBeginGetFullyQualifiedCarData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Ork.Framework.PositionDataProvider.PositionDataContext)(this)).BeginGetFullyQualifiedCarData(callback, asyncState);
        }
        
        private object[] OnEndGetFullyQualifiedCarData(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Ork.Framework.PositionDataProvider.FullyQualifiedCarData> retVal = ((Ork.Framework.PositionDataProvider.PositionDataContext)(this)).EndGetFullyQualifiedCarData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFullyQualifiedCarDataCompleted(object state) {
            if ((this.GetFullyQualifiedCarDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFullyQualifiedCarDataCompleted(this, new GetFullyQualifiedCarDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFullyQualifiedCarDataAsync() {
            this.GetFullyQualifiedCarDataAsync(null);
        }
        
        public void GetFullyQualifiedCarDataAsync(object userState) {
            if ((this.onBeginGetFullyQualifiedCarDataDelegate == null)) {
                this.onBeginGetFullyQualifiedCarDataDelegate = new BeginOperationDelegate(this.OnBeginGetFullyQualifiedCarData);
            }
            if ((this.onEndGetFullyQualifiedCarDataDelegate == null)) {
                this.onEndGetFullyQualifiedCarDataDelegate = new EndOperationDelegate(this.OnEndGetFullyQualifiedCarData);
            }
            if ((this.onGetFullyQualifiedCarDataCompletedDelegate == null)) {
                this.onGetFullyQualifiedCarDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFullyQualifiedCarDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetFullyQualifiedCarDataDelegate, null, this.onEndGetFullyQualifiedCarDataDelegate, this.onGetFullyQualifiedCarDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Ork.Framework.PositionDataProvider.PositionDataContext.BeginGetAirportData(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAirportData(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Ork.Framework.PositionDataProvider.GlobalAirport> Ork.Framework.PositionDataProvider.PositionDataContext.EndGetAirportData(System.IAsyncResult result) {
            return base.Channel.EndGetAirportData(result);
        }
        
        private System.IAsyncResult OnBeginGetAirportData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Ork.Framework.PositionDataProvider.PositionDataContext)(this)).BeginGetAirportData(callback, asyncState);
        }
        
        private object[] OnEndGetAirportData(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Ork.Framework.PositionDataProvider.GlobalAirport> retVal = ((Ork.Framework.PositionDataProvider.PositionDataContext)(this)).EndGetAirportData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAirportDataCompleted(object state) {
            if ((this.GetAirportDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAirportDataCompleted(this, new GetAirportDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAirportDataAsync() {
            this.GetAirportDataAsync(null);
        }
        
        public void GetAirportDataAsync(object userState) {
            if ((this.onBeginGetAirportDataDelegate == null)) {
                this.onBeginGetAirportDataDelegate = new BeginOperationDelegate(this.OnBeginGetAirportData);
            }
            if ((this.onEndGetAirportDataDelegate == null)) {
                this.onEndGetAirportDataDelegate = new EndOperationDelegate(this.OnEndGetAirportData);
            }
            if ((this.onGetAirportDataCompletedDelegate == null)) {
                this.onGetAirportDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAirportDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetAirportDataDelegate, null, this.onEndGetAirportDataDelegate, this.onGetAirportDataCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Ork.Framework.PositionDataProvider.PositionDataContext CreateChannel() {
            return new PositionDataContextClientChannel(this);
        }
        
        private class PositionDataContextClientChannel : ChannelBase<Ork.Framework.PositionDataProvider.PositionDataContext>, Ork.Framework.PositionDataProvider.PositionDataContext {
            
            public PositionDataContextClientChannel(System.ServiceModel.ClientBase<Ork.Framework.PositionDataProvider.PositionDataContext> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetFullyQualifiedCarData(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetFullyQualifiedCarData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Ork.Framework.PositionDataProvider.FullyQualifiedCarData> EndGetFullyQualifiedCarData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Ork.Framework.PositionDataProvider.FullyQualifiedCarData> _result = ((System.Collections.ObjectModel.ObservableCollection<Ork.Framework.PositionDataProvider.FullyQualifiedCarData>)(base.EndInvoke("GetFullyQualifiedCarData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAirportData(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAirportData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Ork.Framework.PositionDataProvider.GlobalAirport> EndGetAirportData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Ork.Framework.PositionDataProvider.GlobalAirport> _result = ((System.Collections.ObjectModel.ObservableCollection<Ork.Framework.PositionDataProvider.GlobalAirport>)(base.EndInvoke("GetAirportData", _args, result)));
                return _result;
            }
        }
    }
}
